straight_flush?
options
n
h2.cards.map(&:value)
self.cards.map(&:value)
n
pair?
three_kind?
n
royal_flush?
n
s
n
s
n
s
n
s
n
s
n
c
n
s
n
s
n
h2.cards.map(&:value)
self.cards.map(&:value)
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
c
n
@cards.map{|ca|ca.value}
@cards
!pair?
n
!three_kind?
n
@cards
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
Deck::VALUES[high]
n
s
n
s
n
s
n
s
n
s
n
s
n
plays
n
@players
s
n
s
n
s
n
s
n
c
n
@players[0].hand
n
s
n
s
n
s
n
s
n
s
n
s
val
n
s
c
s
val
n
s
c
n
s
n
s
n
s
c
s
n
s
c
n
@cards[fst].value==@cards[snd].value
@cards[fst].value
snd
fst
s
n
s
c
s
c
s
n
s
c
s
!sf.each.with_index.all? {|val,i| val+1==sf[(i+1)%13]}
sf
n
s
c
n
s
n
!@cards.all?{|card| card.suit==tes}
n
tes
n
@cards
s
c
n
s
n
s
sp_hands
self.sp_hands
@order.index(self.sp_hands)>@order.index(h2.sp_hands)
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
c
n
h2.cards.map(&:value)
self.cards.map(&:value)
n
pair?
three_kind?
n
royal_flush?
n
s
n
s
n
s
n
s
n
s
n
c
n
s
n
s
n
h2.cards.map(&:value)
self.cards.map(&:value)
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
c
n
@cards.map{|ca|ca.value}
@cards
!pair?
n
!three_kind?
n
@cards
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
Deck::VALUES[high]
n
s
n
s
n
s
n
s
n
s
n
s
n
plays
n
@players
s
n
s
n
s
n
s
n
c
n
@players[0].hand
n
s
n
s
n
s
n
s
